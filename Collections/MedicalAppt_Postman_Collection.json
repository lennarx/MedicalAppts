{
  "openapi": "3.0.4",
  "info": {
    "title": "Medical Appointments Api Documentation",
    "description": "This API allows you to perform appointments managements. Also allows you to create users (doctors and patients).",
    "version": "v1"
  },
  "paths": {
    "/api/Appointments/{appointmentsDate}": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "Retrieves appointments",
        "description": "This endpoint is used to retrieve all the appointments based on a specific date",
        "parameters": [
          {
            "name": "appointmentsDate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Appointments": {
      "post": {
        "tags": [
          "Appointments"
        ],
        "summary": "Creates an appointment",
        "description": "This endpoint is used to create a new appointment for a given date, doctor and patient id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentCreationForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentCreationForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentCreationForm"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Doctors/{specialty}": {
      "get": {
        "tags": [
          "Doctors"
        ],
        "summary": "Retrieves doctors per speciality",
        "description": "This endpoint is used to retrieve doctors per speciality",
        "parameters": [
          {
            "name": "specialty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DoctorDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Doctors/{doctorId}/appointments": {
      "get": {
        "tags": [
          "Doctors"
        ],
        "summary": "Retrieves doctors appointments",
        "description": "This endpoint is used to retrieve appointments based on a doctorId. Appointment date is optional",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "appointmentDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Doctors/{doctorId}/availableTimeFrame": {
      "get": {
        "tags": [
          "Doctors"
        ],
        "summary": "Retrieves doctors availability",
        "description": "This endpoint is used to retrieve doctors availability based on doctorId. AppointmentDate is optional",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "appointmentDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DoctorsAvailableTimeFrameDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Doctors/{doctorId}/schedule": {
      "get": {
        "tags": [
          "Doctors"
        ],
        "summary": "Retrieves doctors schedule",
        "description": "This endpoint is used to retrieve doctors availability based on doctorId. AppointmentDate is optional",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "appointmentDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DoctorsScheduleDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Doctors"
        ],
        "summary": "Creates a Doctor Schedule",
        "description": "This endpoint is used to create a doctor schedule",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDoctorScheduleForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDoctorScheduleForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDoctorScheduleForm"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorsScheduleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Doctors": {
      "post": {
        "tags": [
          "Doctors"
        ],
        "summary": "Creates a Doctor",
        "description": "This endpoint is used to create a new doctor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorCreationForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorCreationForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorCreationForm"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Performs the authentication for the application",
        "description": "This endpoint is used to get the authorization token for using the other endpoints, using the User Email and Password to authenticate. If the password is inputted 3 times wrong the user will be rendered inactive. ",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Patients/{patientId}/appointments": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Retrieves patients appointments",
        "description": "This endpoint is used to retrieve appointments based on a patientId. Appointment date is optional",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "appointmentDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Patients": {
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "Creates a patient",
        "description": "This endpoint is used to create a patient user in the system ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientCreationForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientCreationForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatientCreationForm"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Patients/{patientId}/appointments/{appointmentId}": {
      "patch": {
        "tags": [
          "Patients"
        ],
        "summary": "Updates an appointment",
        "description": "This endpoint is used to either cancel or re-schedule appointments based on patientId and appointmentId",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentForm"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppointmentActionsEnum": {
        "enum": [
          "cancel",
          "reschedule"
        ],
        "type": "string"
      },
      "AppointmentCreationForm": {
        "type": "object",
        "properties": {
          "doctorId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AppointmentDTO": {
        "type": "object",
        "properties": {
          "appointmentId": {
            "type": "integer",
            "format": "int32"
          },
          "patient": {
            "type": "string",
            "nullable": true
          },
          "doctor": {
            "type": "string",
            "nullable": true
          },
          "appointmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/AppointmentStatus"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppointmentStatus": {
        "enum": [
          "scheduled",
          "completed",
          "cancelled",
          "nO_SHOW"
        ],
        "type": "string"
      },
      "CreateDoctorScheduleForm": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-span"
          },
          "endTime": {
            "type": "string",
            "format": "date-span"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [
          "sunday",
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday"
        ],
        "type": "string"
      },
      "DoctorCreationForm": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "specialty": {
            "$ref": "#/components/schemas/MedicalSpecialty"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DoctorDTO": {
        "type": "object",
        "properties": {
          "doctorId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "specialty": {
            "$ref": "#/components/schemas/MedicalSpecialty"
          }
        },
        "additionalProperties": false
      },
      "DoctorsAvailableTimeFrameDTO": {
        "type": "object",
        "properties": {
          "doctorId": {
            "type": "integer",
            "format": "int32"
          },
          "doctorName": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "availableTimeFramesPerDay": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DoctorsScheduleDTO": {
        "type": "object",
        "properties": {
          "doctorId": {
            "type": "integer",
            "format": "int32"
          },
          "doctorName": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "number",
            "format": "double"
          },
          "endTime": {
            "type": "number",
            "format": "double"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          }
        },
        "additionalProperties": false
      },
      "LoginForm": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MedicalSpecialty": {
        "enum": [
          "cardiologist",
          "clinical",
          "gastroenterologist",
          "neurologist",
          "dermatologist",
          "orthopedic",
          "pediatrician",
          "psychiatrist"
        ],
        "type": "string"
      },
      "PatientCreationForm": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatientDTO": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dateOfbirth": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAppointmentForm": {
        "type": "object",
        "properties": {
          "newDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "action": {
            "$ref": "#/components/schemas/AppointmentActionsEnum"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter JWT token **_only_**",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKey": {
        "type": "apiKey",
        "description": "API Key needed to access the endpoints. Example: 'AUTH-API-KEY: {your-key}'",
        "name": "AUTH-API-KEY",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ],
      "ApiKey": [ ]
    }
  ]
}